---
title: "07-gea"
format: html
editor: visual
---

### Determining genetic variants associated with environmental gradients with Redundancy analysis (RDA)

### Load required packages

```{r}
library(vegan)
#library(LEA)
library(ggplot2)
library(corrplot)
library(caret)
library(poppr)
library(here)
```

## Import data:

### Temperature data

#### Only Summer

```{r}
anemone_temps <- read.csv(here("project/data", "anemone_temps.csv"))

#summer dataset (for now)
anemone_temps_summer <- anemone_temps %>% filter(season == "Summer")

# oops we don't need Case Inlet
anemone_temps_summer <- anemone_temps_summer %>% filter(site != "CI")

desired_order <- c("GH", "MI", "NR", "CP", "WB", "PG")
anemone_temps_summer$site <- factor(anemone_temps_summer$site, levels = desired_order)

head(anemone_temps_summer)
```

#### All seasons

```{r}
# all data
anemone_temps_wide <- anemone_temps %>%
  pivot_wider(
    id_cols = site,
    names_from = season,
    values_from = c(seasonal_mean, seasonal_90th, seasonal_10th, seasonal_corrected_range, seasonal_avg_gdd))

# Rename columns to have season first
names(anemone_temps_wide) <- gsub("^(.*)_(Fall|Spring|Summer|Winter)$", "\\2_\\1", names(anemone_temps_wide))

# oops we don't need Case Inlet
anemone_temps_wide <- anemone_temps_wide %>% filter(site != "CI")

desired_order <- c("GH", "MI", "NR", "CP", "WB", "PG")
anemone_temps_wide$site <- factor(anemone_temps_wide$site, levels = desired_order)

anemone_temps_all <- anemone_temps_wide

head(anemone_temps_all)
```

#### Scaling for RDA

```{r}
anemone_temps_numeric <- anemone_temps_all %>% select(where(is.numeric)) # selecting temp metrics

anemone_temps_scaled <- scale(anemone_temps_numeric)  # Mean = 0, SD = 1

head(anemone_temps_scaled)
```

### import .gen file of genotypes

Genotypes from ___ individuals at ___ SNPs. No missing data. Data format is a ___ file generated by the ___ package (CITE).

```{r}
# Read first few lines to inspect format
readLines(here::here("project/output", "genepop_final.gen"), n = 10)

genind_obj <- read.genepop(
  here::here("project/output", "genepop_final.gen"),
  ncode = 2,   # or 3, depending on your allele coding
  quiet = FALSE
)

genind_obj
```

#### Convert to population level allele frequencies (and filter for sites that we have env. data for)

```{r}
pop_factor <- genind_obj$pop  # population assignments
genpop <- genind2genpop(genind_obj, pop = pop_factor)
freq_matrix <- makefreq(genpop, missing = 0)  # 0 for missing data

rownames(freq_matrix)  # Shows the population names and their order

sites_to_keep <- c("GraysHarbor_GH50", "MauryIsland_M050", "Nisqually_N050", "CherryPoint_C050", "WillapaBay_W050", "PortGamble_G050")

freq_matrix_filtered <- freq_matrix[rownames(freq_matrix) %in% sites_to_keep, ]

freq_matrix <- freq_matrix_filtered

# Your desired order of population/site names
desired_order <- c("GraysHarbor_GH50", "MauryIsland_M050", "Nisqually_N050", "CherryPoint_C050", "WillapaBay_W050", "PortGamble_G050")

freq_matrix_ordered <- freq_matrix[desired_order, ]

rownames(freq_matrix_ordered) # check

```

### RDA

```{r}
## check for correlation in temperature metrics
corr_mat <- cor(anemone_temps_scaled)
corrplot::corrplot(corr_mat)

IndexesToDrop <- caret::findCorrelation(cor(anemone_temps_scaled), cutoff = 0.7)

#The variables that remain
corrplot(cor(anemone_temps_scaled[,-IndexesToDrop]))

#Save this smaller set
uncorr.temps <- anemone_temps_scaled[,-IndexesToDrop]
```

```{r}
rda_result <- rda(freq_matrix ~ ., data = as.data.frame(uncorr.temps))

#adjust for multiple corrections
RsquareAdj(rda_result)

#variance explained by the canonical (RDA) axes
summary(eigenvals(rda_result, model = "constrained"))

#plot constrained eigenvalues
screeplot(rda_result)

# Check the variance inflation factors to make sure that correlations among predic tors are not potentially skewing the resutls (we want these to be below 10)
vif.cca(rda_result)
```
### Significance testing

```{r}

#Now letâ€™s check our RDA model for significance using formal tests. We can assess both the full model and each constrained axis using F-statistics (Legendre et al, 2010). The null hypothesis is that no linear relationship exists between the SNP data and the temperature predictors
RDA.signif <- anova.cca(rda_result, parallel=getOption("mc.cores")) # default is permutation=999
RDA.signif

```
### Plot RDA results

```{r}
bg <- c("#4E9DFE","#FECB00","#994BFF","#250F98","#FD9800","#27BF99")

plot(rda_result, scaling = 3)
text(rda_result, cex = 0.8)  # Environmental vectors
points(rda_result, display = "sites", pch = 21)  # Populations

```

